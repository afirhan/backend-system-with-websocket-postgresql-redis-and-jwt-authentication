services:
  postgresdb:
    image: postgres:15
    container_name: postgresdb
    restart: unless-stopped
    env_file: ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_LOCAL_PORT}:${POSTGRES_DOCKER_PORT}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - threatmap-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - "6380:6379"
    networks:
      - threatmap-network

  backend:
    depends_on:
      postgresdb:
        condition: service_healthy
      redis:
        condition: service_started
    build:
      context: .
      dockerfile: docker/nodejs18/Dockerfile
    image: afirhan/threatmap
    container_name: threatmap-backend
    restart: unless-stopped
    env_file: ./.env
    environment:
      DB_HOST: postgresdb
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
      DB_PORT: ${POSTGRES_DOCKER_PORT}
    ports:
      - ${NODE_LOCAL_PORT}:${NODE_DOCKER_PORT}
    volumes:
      - ./backend:/app  # Memuat kode sumber saja
      - /app/node_modules  # Mengabaikan node_modules di volume lokal
    networks:
      - threatmap-network

volumes:
  postgres-data:

networks:
  threatmap-network:
    driver: bridge
    name: threatmap-network